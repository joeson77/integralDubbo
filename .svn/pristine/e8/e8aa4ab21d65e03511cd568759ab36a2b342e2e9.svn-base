package com.test.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.test.entity.PublicBenefit;
import com.test.entity.Users;
import com.test.service.PublicBenefitService;
import com.test.util.JavaWebToken;

@Controller
public class PublicBenefitController {
	
	@Autowired
	PublicBenefitService publicBenefitService;
	
	protected static Logger log = LoggerFactory.getLogger(PublicBenefitController.class);
	
	//Jedis jedis = RedisUtils2.getJedis();
	
	@RequestMapping("index.do")
	public String index(HttpServletRequest request,Model model){
		log.info("进入主页方法......");
		if (request.getParameter("tokenString") != null) {
			//String token =  jedis.get(request.getParameter("tokenString"));
			//log.info("redis中获取到的token值为:" + token);
			log.info("tokenString不为空。。。");
			Map<String, Object> userInfoMap = JavaWebToken.parserJavaWebToken(request.getParameter("tokenString"));
			String userName = (String) userInfoMap.get("userName");
			HttpSession session = request.getSession();
			log.info("该账号的sessionid为: " + request.getSession().getId());
			publicBenefitService.updateSessionID(userName, request.getSession().getId());
			//session.setAttribute("userName", userName);
			session.setAttribute("token", request.getParameter("tokenString"));
			log.info("token解析的 userName 为：" + userName);
			Users user = publicBenefitService.selectUserInfo(userName);
			session.setAttribute("user", user);
			session.setAttribute("token", request.getParameter("tokenString"));
			model.addAttribute("user", user);
			model.addAttribute("token", request.getParameter("tokenString"));
		}else {
			log.info("用户未登录....");
			model.addAttribute("userName", null);
			model.addAttribute("token", null);
		}
		return "index";
	}
	
	@RequestMapping("weDo.do")
	public String weDo(HttpServletRequest request,Model model){
		log.info("进入到公益活动展示列表......");
		List<PublicBenefit> listActive = publicBenefitService.selectAllActive();
		model.addAttribute("listActive", listActive);
		return "weDo";
	}
	
	@RequestMapping("getDetails.do")
	@ResponseBody
	public Map < String , Object > getDetails(HttpServletRequest request){
		log.info("正在查询公益活动详情......");
		int activeId=Integer.parseInt(request.getParameter("activeId"));
		PublicBenefit publicBenefit = publicBenefitService.selectById(activeId);
		Map < String , Object > jsonMap = new HashMap< String , Object>();
		jsonMap.put("publicBenefit", publicBenefit);
		return jsonMap;
	}
	
	@ResponseBody
	@RequestMapping("updateHaving.do")
	public Map < String , Object > updateHaving(HttpServletRequest request){
		log.info("进入到更新已有积分方法中。。。。");
		int num = Integer.parseInt(request.getParameter("num"));
		int displayActiveId = Integer.parseInt(request.getParameter("displayActiveId"));
		log.info("获取到的积分为:" + num);
		log.info("获取到的id为:" + displayActiveId);
		int returnFlag = publicBenefitService.updateHaving(displayActiveId, num);
		Map < String , Object > jsonMap = new HashMap< String , Object>();
		if (returnFlag == 1) {
			jsonMap.put("flag", "true");
			jsonMap.put("errorCode", "0000");
			return jsonMap;
		} else {
			jsonMap.put("flag", "false");
			jsonMap.put("errorCode", "1111");
			return jsonMap;
		}
	}
}
