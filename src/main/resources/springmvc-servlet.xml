<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd      
http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context-4.3.xsd   
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd"  
    default-lazy-init="true">  
  
    <!-- 启用注解 -->  
    <context:annotation-config />  
    
    <!-- 启用默认配置 -->
  <mvc:annotation-driven>
    <mvc:message-converters register-defaults="true">
      <!-- 配置Fastjson支持 -->
      <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
            <value>text/html;charset=UTF-8</value>
            <value>application/json</value>
          </list>
        </property>
        <property name="features">
          <list>
            <value>WriteMapNullValue</value>
            <value>QuoteFieldNames</value>
          </list>
        </property>
      </bean>
    </mvc:message-converters>
  </mvc:annotation-driven>
  
  <mvc:interceptors>
  	<mvc:interceptor>
  		<!-- 拦截所有的请求，这个必须写在前面，也就是写在【不拦截】的上面 -->
        <mvc:mapping path="/**" />
        <!-- 但是排除下面这些，也就是不拦截请求 -->
  		<mvc:exclude-mapping path="/news/index.do" />
  		<mvc:exclude-mapping path="/user/register.do"/>
  		<mvc:exclude-mapping path="/user/sendMsg.do"/>
  		<mvc:exclude-mapping path="/user/login.do"/>
  		<mvc:exclude-mapping path="/user/valicode.do"/>
  		<mvc:exclude-mapping path="/user/logout.do"/>
  		<!--class文件路径改成你自己写得拦截器路径！！ -->
        <bean class="com.test.filter.TokenCompare"/>
    </mvc:interceptor>
    <mvc:interceptor>
  		<!-- 拦截所有的请求，这个必须写在前面，也就是写在【不拦截】的上面 -->
        <mvc:mapping path="/user/login.do" />
        <bean class="com.test.filter.LoginFilter"/>
    </mvc:interceptor>
  </mvc:interceptors>
  
    <!-- 扫描Controller -->  
    <context:component-scan base-package="com.test.controller" />  
    <!-- 完成请求与注解的POJO映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />  
          
          
    <bean id="defaultViewResolver"  
        class="org.springframework.web.servlet.view.InternalResourceViewResolver"  
        p:order="3">  
        <property name="viewClass"  
            value="org.springframework.web.servlet.view.JstlView" />  
        <property name="contentType" value="text/html" />  
        <property name="prefix" value="/WEB-INF/" />  
        <property name="suffix" value=".jsp" />  
    </bean>
    
    <!-- velocityEngine生成模板文件 -->
	<!-- <bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
				<prop key="velocimacro.library"></prop>
			</props>
		</property>
	</bean> -->
	<!-- 定时器 -->
	<!-- 要调用的工作类 -->
	<!-- <bean id="quartzJob" class="com.test.util.QuartzJob">
		<property name="velocityEngine" ref="velocityEngine" />
	</bean> -->
	<!-- 定义调用对象和调用对象的方法 -->
	<!-- <bean id="jobtask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		调用的类
		<property name="targetObject">
			<ref bean="quartzJob" />
		</property>
		调用类中的方法
		<property name="targetMethod">
			<value>work</value>
		</property>
	</bean> -->
	<!-- 定义触发时间 -->
	<!-- <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="jobtask" />
		</property>
		cron表达式
		<property name="cronExpression">
			每天凌晨0点10分触发 <value>0 10 0 * * ?</value>
			每隔4分钟执行1次，为了测试
			<value>0 0/8 * * * ?</value>
			<value>0 10 0 * * ?</value>
		</property>
	</bean> -->
	<!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
	<!-- <bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="doTime" />
			</list>
		</property>
	</bean> -->
</beans>